generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  auth0Id       String         @unique
  email         String?         @unique
  roleId        Int?
  role          Role?           @relation(fields: [roleId], references: [id])
  organizations Organization[]
  layers      Layer[]
  points       Point[]
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model Organization {
  id       Int       @id @default(autoincrement())
  name     String
  users    User[]
  layers Layer[]
}

model Layer {
  id             Int          @id @default(autoincrement())
  name           String
  description    String?
  createdById    String
  createdBy      User         @relation(fields: [createdById], references: [auth0Id])
  organizationId Int
  organization   Organization @relation(fields: [organizationId], references: [id])
  lines          Line[]
  points         Point[]
  polygons       Polygon[]
}

model Line {
  id       Int     @id @default(autoincrement())
  type     String? @db.VarChar
  description    String? @db.VarChar
  project  String? @db.VarChar
  layerId Int?
  layer Layer? @relation(fields: [layerId], references: [id])
}

model Point {
  id       Int     @id @default(autoincrement())
  type     String? @db.VarChar
  description    String? @db.VarChar
  project  String? @db.VarChar
  layerId Int?
  layer Layer? @relation(fields: [layerId], references: [id])
  createdById    String
  createdBy      User @relation(fields: [createdById], references: [auth0Id])
}

model Polygon {
  id       Int     @id @default(autoincrement())
  type     String? @db.VarChar
  description    String? @db.VarChar
  project  String? @db.VarChar
  layerId Int?
  layer Layer? @relation(fields: [layerId], references: [id])
}

model Upload {
  id       Int     @id @default(autoincrement())
  fileName String

}
