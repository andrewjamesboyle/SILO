generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  auth0Id       String         @unique
  email         String         @unique
  roleId        Int
  role          Role           @relation(fields: [roleId], references: [id])
  organizations Organization[]
  projects      Project[]      @relation("createdProjects")
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model Organization {
  id       Int       @id @default(autoincrement())
  name     String
  users    User[]
  projects Project[]
}

model Project {
  id             Int          @id @default(autoincrement())
  name           String
  description    String?
  createdById    Int
  createdBy      User         @relation(fields: [createdById], references: [id], name: "createdProjects")
  organizationId Int
  organization   Organization @relation(fields: [organizationId], references: [id])
  departments    Department[]
}

model Department {
  id Int @id @default(autoincrement())
  name String
  points Point[]
  lines Line[]
  polygons Polygon[]
  projectId Int?
  project Project? @relation(fields: [projectId], references: [id])
}

model Line {
  id       Int     @id @default(autoincrement())
  type     String? @db.VarChar
  notes    String? @db.VarChar
  departmentId Int?
  department Department? @relation(fields: [departmentId], references: [id])
}

model Point {
  id       Int     @id @default(autoincrement())
  type     String? @db.VarChar
  notes    String? @db.VarChar
  departmentId Int?
  department Department? @relation(fields: [departmentId], references: [id])
}

model Polygon {
  id       Int     @id @default(autoincrement())
  type     String? @db.VarChar
  notes    String? @db.VarChar
  departmentId Int?
  department Department? @relation(fields: [departmentId], references: [id])
}
